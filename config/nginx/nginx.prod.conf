upstream ae_shop_frontend {
  server ae_shop_frontend:3000;
}

upstream ae_shop_api {
  server ae_shop_api:8088;
}

upstream ae_shop_pma {
  server ae_shop_pma:8080;
}

upstream ae_shop_strapi {
  server ae_shop_strapi:1337;
}

server {
  listen 80 default_server;
  server_name _;
  return 301 https://$host$request_uri;
}

server {
  resolver 127.0.0.11 valid=30s;

  server_name devshop.ae-solar.com;

  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;

  ssl_certificate /etc/nginx/ssl/aesolar.crt;
  ssl_certificate_key /etc/nginx/ssl/aesolar.key;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;

  root /var/www/html;

  index index.html index.htm;

  location / {
    # Temporary Dev WebSite password protection
    auth_basic "Administrator’s Area";
    auth_basic_user_file /etc/nginx/.htpasswd;

    proxy_pass http://ae_shop_frontend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_intercept_errors on;
    # error_page 502 = /502.html;
  }

  location /aepmaa {
    auth_basic "Administrator’s Area";
    auth_basic_user_file /etc/nginx/.htpasswd;

    try_files $uri $uri/ /;
    proxy_pass http://ae_shop_pma;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_intercept_errors on;
  }

  location /api {
    location /api/v1 {
      proxy_pass http://ae_shop_api;
    }

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    add_header 'Access-Control-Allow-Origin' '*';

    if ($request_method = 'OPTIONS') {
      return 204;
    }

  }

  location /strapi/ {
    proxy_pass http://ae_shop_strapi;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  # error_page 502 /404.html;
  # location = /502.html {
  #   root /var/www/html/static/error;
  #   internal;
  # }
  # error_page 404 /404.html;
  # location = /404.html {
  #   root /var/www/html/static/error;
  #   internal;
  # }
}